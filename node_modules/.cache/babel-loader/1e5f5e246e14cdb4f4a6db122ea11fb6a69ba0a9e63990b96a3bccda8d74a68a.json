{"ast":null,"code":"var _jsxFileName = \"E:\\\\VectorShift Ai\\\\vectorshift-frontend--technical-assignment\\\\src\\\\components\\\\nodes\\\\TransformNode.js\",\n  _s = $RefreshSig$();\nimport { BaseNode } from \"./BaseNode\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransformNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const [transform, setTransform] = useState((data === null || data === void 0 ? void 0 : data.transform) || \"\");\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    title: \"Transform\",\n    inputs: [{\n      id: \"input\"\n    }],\n    outputs: [{\n      id: \"output\"\n    }],\n    type: \"transform\",\n    data: data,\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"node-select\",\n      value: transform,\n      onChange: e => setTransform(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select transform...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"uppercase\",\n        children: \"To Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lowercase\",\n        children: \"To Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"capitalize\",\n        children: \"Capitalize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"trim\",\n        children: \"Trim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"number\",\n        children: \"To Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(TransformNode, \"E6bacRHZH+wzx+fQA2Muz4uBSTI=\");\n_c = TransformNode;\nvar _c;\n$RefreshReg$(_c, \"TransformNode\");","map":{"version":3,"names":["BaseNode","useState","jsxDEV","_jsxDEV","TransformNode","id","data","_s","transform","setTransform","title","inputs","outputs","type","children","className","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/VectorShift Ai/vectorshift-frontend--technical-assignment/src/components/nodes/TransformNode.js"],"sourcesContent":["import {BaseNode} from \"./BaseNode\";\r\nimport {useState} from \"react\";\r\n\r\nexport const TransformNode = ({id, data}) => {\r\n  const [transform, setTransform] = useState(data?.transform || \"\");\r\n\r\n  return (\r\n    <BaseNode\r\n      id={id}\r\n      title=\"Transform\"\r\n      inputs={[{id: \"input\"}]}\r\n      outputs={[{id: \"output\"}]}\r\n      type=\"transform\"\r\n      data={data}\r\n    >\r\n      <select\r\n        className=\"node-select\"\r\n        value={transform}\r\n        onChange={(e) => setTransform(e.target.value)}\r\n      >\r\n        <option value=\"\">Select transform...</option>\r\n        <option value=\"uppercase\">To Uppercase</option>\r\n        <option value=\"lowercase\">To Lowercase</option>\r\n        <option value=\"capitalize\">Capitalize</option>\r\n        <option value=\"trim\">Trim</option>\r\n        <option value=\"number\">To Number</option>\r\n      </select>\r\n    </BaseNode>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAACC,EAAE;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAAK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,SAAS,KAAI,EAAE,CAAC;EAEjE,oBACEL,OAAA,CAACH,QAAQ;IACPK,EAAE,EAAEA,EAAG;IACPK,KAAK,EAAC,WAAW;IACjBC,MAAM,EAAE,CAAC;MAACN,EAAE,EAAE;IAAO,CAAC,CAAE;IACxBO,OAAO,EAAE,CAAC;MAACP,EAAE,EAAE;IAAQ,CAAC,CAAE;IAC1BQ,IAAI,EAAC,WAAW;IAChBP,IAAI,EAAEA,IAAK;IAAAQ,QAAA,eAEXX,OAAA;MACEY,SAAS,EAAC,aAAa;MACvBC,KAAK,EAAER,SAAU;MACjBS,QAAQ,EAAGC,CAAC,IAAKT,YAAY,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAF,QAAA,gBAE9CX,OAAA;QAAQa,KAAK,EAAC,EAAE;QAAAF,QAAA,EAAC;MAAmB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7CpB,OAAA;QAAQa,KAAK,EAAC,WAAW;QAAAF,QAAA,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CpB,OAAA;QAAQa,KAAK,EAAC,WAAW;QAAAF,QAAA,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CpB,OAAA;QAAQa,KAAK,EAAC,YAAY;QAAAF,QAAA,EAAC;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CpB,OAAA;QAAQa,KAAK,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClCpB,OAAA;QAAQa,KAAK,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf,CAAC;AAAChB,EAAA,CA1BWH,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}