{"ast":null,"code":"var _jsxFileName = \"E:\\\\VectorShift Ai\\\\vectorshift-frontend--technical-assignment\\\\src\\\\components\\\\nodes\\\\TemplateNode.js\",\n  _s = $RefreshSig$();\nimport { BaseNode } from \"./BaseNode\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TemplateNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const [template, setTemplate] = useState((data === null || data === void 0 ? void 0 : data.template) || \"\");\n  const [variables, setVariables] = useState([]);\n  useEffect(() => {\n    const matches = template.match(/\\{\\{([^}]+)\\}\\}/g) || [];\n    const vars = matches.map(match => match.slice(2, -2).trim());\n    setVariables([...new Set(vars)]);\n  }, [template]);\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    title: \"Template\",\n    inputs: variables.map(v => ({\n      id: v\n    })),\n    outputs: [{\n      id: \"output\"\n    }],\n    type: \"template\",\n    data: data,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"node-input\",\n      value: template,\n      onChange: e => setTemplate(e.target.value),\n      placeholder: \"Enter template with {{variables}}\",\n      style: {\n        minHeight: \"80px\",\n        resize: \"vertical\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), variables.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"variables-list\",\n      children: [\"Variables: \", variables.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TemplateNode, \"t/bNrox7J4YYeS3L5D0KQV8ze1c=\");\n_c = TemplateNode;\nvar _c;\n$RefreshReg$(_c, \"TemplateNode\");","map":{"version":3,"names":["BaseNode","useState","useEffect","jsxDEV","_jsxDEV","TemplateNode","id","data","_s","template","setTemplate","variables","setVariables","matches","match","vars","map","slice","trim","Set","title","inputs","v","outputs","type","children","className","value","onChange","e","target","placeholder","style","minHeight","resize","fileName","_jsxFileName","lineNumber","columnNumber","length","join","_c","$RefreshReg$"],"sources":["E:/VectorShift Ai/vectorshift-frontend--technical-assignment/src/components/nodes/TemplateNode.js"],"sourcesContent":["import {BaseNode} from \"./BaseNode\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\nexport const TemplateNode = ({id, data}) => {\r\n  const [template, setTemplate] = useState(data?.template || \"\");\r\n  const [variables, setVariables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const matches = template.match(/\\{\\{([^}]+)\\}\\}/g) || [];\r\n    const vars = matches.map((match) => match.slice(2, -2).trim());\r\n    setVariables([...new Set(vars)]);\r\n  }, [template]);\r\n\r\n  return (\r\n    <BaseNode\r\n      id={id}\r\n      title=\"Template\"\r\n      inputs={variables.map((v) => ({id: v}))}\r\n      outputs={[{id: \"output\"}]}\r\n      type=\"template\"\r\n      data={data}\r\n    >\r\n      <textarea\r\n        className=\"node-input\"\r\n        value={template}\r\n        onChange={(e) => setTemplate(e.target.value)}\r\n        placeholder=\"Enter template with {{variables}}\"\r\n        style={{\r\n          minHeight: \"80px\",\r\n          resize: \"vertical\",\r\n        }}\r\n      />\r\n      {variables.length > 0 && (\r\n        <div className=\"variables-list\">Variables: {variables.join(\", \")}</div>\r\n      )}\r\n    </BaseNode>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC,EAAE;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAAM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,QAAQ,KAAI,EAAE,CAAC;EAC9D,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAGJ,QAAQ,CAACK,KAAK,CAAC,kBAAkB,CAAC,IAAI,EAAE;IACxD,MAAMC,IAAI,GAAGF,OAAO,CAACG,GAAG,CAAEF,KAAK,IAAKA,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9DN,YAAY,CAAC,CAAC,GAAG,IAAIO,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACJ,QAAQ;IACPM,EAAE,EAAEA,EAAG;IACPc,KAAK,EAAC,UAAU;IAChBC,MAAM,EAAEV,SAAS,CAACK,GAAG,CAAEM,CAAC,KAAM;MAAChB,EAAE,EAAEgB;IAAC,CAAC,CAAC,CAAE;IACxCC,OAAO,EAAE,CAAC;MAACjB,EAAE,EAAE;IAAQ,CAAC,CAAE;IAC1BkB,IAAI,EAAC,UAAU;IACfjB,IAAI,EAAEA,IAAK;IAAAkB,QAAA,gBAEXrB,OAAA;MACEsB,SAAS,EAAC,YAAY;MACtBC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC,mCAAmC;MAC/CC,KAAK,EAAE;QACLC,SAAS,EAAE,MAAM;QACjBC,MAAM,EAAE;MACV;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACD3B,SAAS,CAAC4B,MAAM,GAAG,CAAC,iBACnBnC,OAAA;MAAKsB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,GAAC,aAAW,EAACd,SAAS,CAAC6B,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACvE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf,CAAC;AAAC9B,EAAA,CAlCWH,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}